name: "get-ssm-parameter"
description: "Fetches a value store in SSM and makes it available in the env (masked). Either env-variable-name or filepath must be present"

inputs:
  ssm-parameter:
    description: "The path to the value in the SSM store."
    required: true
  env-variable-name:
    description: "The env variable name to export to."
    required: false
  filepath:
    description: "The file path to export to. (Gets removed at the end)"
    required: false

runs:
  using: "composite"
  steps:
    - name: Assert input parameters valid
      shell: bash
      if: inputs.env-variable-name == '' && inputs.filepath == ''
      run: |
        echo "::error ::Please specify either env-variable-name or filepath as an input."
        exit 1

    - name: Fetch parameter to environment (Windows)
      if: runner.os == 'Windows' && inputs.env-variable-name != ''
      shell: pwsh
      run: |
        $PARAMETER_VALUE = (aws ssm get-parameter --with-decryption --name ${{ inputs.ssm-parameter }} | ConvertFrom-Json).Parameter.Value
        echo "::add-mask::$PARAMETER_VALUE"
        echo "${{ inputs.env-variable-name }}=$PARAMETER_VALUE" >> "$env:GITHUB_ENV"

    - name: Fetch parameter to file (Windows)
      if: runner.os == 'Windows' && inputs.filepath != ''
      shell: pwsh
      run: |
        $paramValue = (aws ssm get-parameter --with-decryption --name ${{ inputs.ssm-parameter }} | ConvertFrom-Json).Parameter.Value
        Set-Content -Path ${{ inputs.filepath }} -Value $paramValue
